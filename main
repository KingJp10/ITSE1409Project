import tkinter as tk
from tkinter import Label, Button, Frame
import matplotlib.pyplot as plt
from PIL import Image, ImageTk
import os

poster_folder = r"D:\MovieApp\posters"

movies = {
    "Inception": {
        "genre": "Sci-Fi",
        "director": "Christopher Nolan",
        "writer": "Christopher Nolan",
        "stars": "Leonardo DiCaprio, Joseph Gordon-Levitt, Ellen Page",
        "summary": "A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O., but his tragic past may doom the project and his team to disaster.",
        "poster": "inception.jpg"
    },
    "The Godfather": {
        "genre": "Crime",
        "director": "Francis Ford Coppola",
        "writer": "Mario Puzo",
        "stars": "Marlon Brando, Al Pacino, James Caan",
        "summary": "The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.",
        "poster": "the_godfather.jpg"
    },
    "Toy Story": {
        "genre": "Animation",
        "director": "John Lasseter",
        "writer": "Joss Whedon, Andrew Stanton",
        "stars": "Tom Hanks, Tim Allen, Don Rickles",
        "summary": "A cowboy doll is profoundly threatened and jealous when a new spaceman figure supplants him as top toy in a boy's room.",
        "poster": "toy_story.jpg"
    },
    "Titanic": {
        "genre": "Drama",
        "director": "James Cameron",
        "writer": "James Cameron",
        "stars": "Leonardo DiCaprio, Kate Winslet, Billy Zane",
        "summary": "A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.",
        "poster": "titanic.jpg"
    },
    "The Dark Knight": {
        "genre": "Action",
        "director": "Christopher Nolan",
        "writer": "Jonathan Nolan, Christopher Nolan",
        "stars": "Christian Bale, Heath Ledger, Aaron Eckhart",
        "summary": "When the menace known as The Joker emerges from his mysterious past, he wreaks havoc and chaos on the people of Gotham.",
        "poster": "the_dark_knight.jpg"
    },
    "Pulp Fiction": {
        "genre": "Crime",
        "director": "Quentin Tarantino",
        "writer": "Quentin Tarantino",
        "stars": "John Travolta, Uma Thurman, Samuel L. Jackson",
        "summary": "The lives of two mob hitmen, a boxer, a gangster's wife, and a pair of diner bandits intertwine in four tales of violence and redemption.",
        "poster": "pulp_fiction.jpg"
    },
    "Avatar": {
        "genre": "Action",
        "director": "James Cameron",
        "writer": "James Cameron",
        "stars": "Sam Worthington, Zoe Saldana, Sigourney Weaver",
        "summary": "A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home.",
        "poster": "avatar.jpg"
    },
    "Finding Nemo": {
        "genre": "Animation",
        "director": "Andrew Stanton",
        "writer": "Andrew Stanton",
        "stars": "Albert Brooks, Ellen DeGeneres, Alexander Gould",
        "summary": "After his son is captured in the Great Barrier Reef and taken to Sydney, a timid clownfish sets out on a journey to bring him home.",
        "poster": "finding_nemo.jpg"
    },
    "Interstellar": {
        "genre": "Sci-Fi",
        "director": "Christopher Nolan",
        "writer": "Jonathan Nolan, Christopher Nolan",
        "stars": "Matthew McConaughey, Anne Hathaway, Jessica Chastain",
        "summary": "When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.",
        "poster": "interstellar.jpg"
    },
    "The Lion King": {
        "genre": "Animation",
        "director": "Roger Allers, Rob Minkoff",
        "writer": "Jeffrey Katzenberg",
        "stars": "Matthew Broderick, Jeremy Irons, James Earl Jones",
        "summary": "Lion prince Simba and his father are targeted by his bitter uncle, who wants to ascend the throne himself.",
        "poster": "the_lion_king.jpg"
    }
}

root = tk.Tk()
root.title("GMovies")
root.geometry("1920x1080")
root.config(bg="#2e2e2e")
root.state('zoomed')

posters_frame = Frame(root, bg="#2e2e2e")
posters_frame.pack(pady=(20,10))

chart_frame = Frame(root, bg="#2e2e2e")
chart_frame.pack(pady=(0,10))

info_frame = Frame(root, bg="#1e1e1e")

poster_photos = []

def show_movie_details(movie):
    """When a poster is clicked, show the movie's information."""
    if not info_frame.winfo_ismapped():
        info_frame.pack(pady=10)

    for widget in info_frame.winfo_children():
        widget.destroy()

    movie_data = movies[movie]

    Label(info_frame, text=f"Title: {movie}", font=("Arial", 22, "bold"), bg="#1e1e1e", fg="white").pack(pady=5)
    Label(info_frame, text=f"Director: {movie_data['director']}", font=("Arial", 16), bg="#1e1e1e", fg="white").pack()
    Label(info_frame, text=f"Writer: {movie_data['writer']}", font=("Arial", 16), bg="#1e1e1e", fg="white").pack()
    Label(info_frame, text=f"Stars: {movie_data['stars']}", font=("Arial", 16), bg="#1e1e1e", fg="white").pack()
    Label(info_frame, text=f"Summary: {movie_data['summary']}", font=("Arial", 14), bg="#1e1e1e", fg="white", wraplength=1800, justify="center").pack(pady=10)

def show_genre_chart():
    """When the button is clicked, show a chart of movie types."""
    genres = [movies[movie]["genre"] for movie in movies]
    genre_count = {}
    for genre in genres:
        genre_count[genre] = genre_count.get(genre, 0) + 1

    plt.figure(figsize=(10, 6))
    plt.bar(genre_count.keys(), genre_count.values(), color="#4CAF50")
    plt.title('Movie Genres', fontsize=16)
    plt.xlabel('Genre', fontsize=14)
    plt.ylabel('Number of Movies', fontsize=14)
    plt.xticks(rotation=45)
    plt.grid(axis='y', linestyle='--', alpha=0.7)
    plt.tight_layout()
    plt.show()

def on_enter(e):
    """When the mouse goes over a button, make it brighter."""
    e.widget.config(bg="#444444")

def on_leave(e):
    """When the mouse leaves a button, make it normal again."""
    e.widget.config(bg="#2e2e2e")

for idx, movie in enumerate(movies):
    try:
        poster_path = os.path.join(poster_folder, movies[movie]['poster'])
        img = Image.open(poster_path)
    except FileNotFoundError:
        img = Image.open(r"D:\MovieApp\posters\default.jpg")

    img = img.resize((150, 225), Image.Resampling.LANCZOS)
    photo = ImageTk.PhotoImage(img)
    poster_photos.append(photo)

    button = Button(posters_frame, image=photo, command=lambda m=movie: show_movie_details(m),
                    bg="#2e2e2e", activebackground="#444444", borderwidth=0, highlightthickness=0)
    button.grid(row=0, column=idx, padx=10, pady=10)

    button.bind("<Enter>", on_enter)
    button.bind("<Leave>", on_leave)

chart_button = Button(chart_frame, text="Show Genre Chart", command=show_genre_chart,
                      font=("Arial", 14), bg="#4CAF50", fg="white")
chart_button.pack()

logo_frame = Frame(root, bg="#2e2e2e")
logo_frame.pack(pady=10)

try:
    logo_path = r"D:\MovieApp\logo.png"
    logo_img = Image.open(logo_path)
except FileNotFoundError:
    logo_img = Image.new("RGB", (400, 200), color=(76, 175, 80))

logo_img = logo_img.resize((400, 200), Image.Resampling.LANCZOS)
logo_photo = ImageTk.PhotoImage(logo_img)

logo_label = Label(logo_frame, image=logo_photo, bg="#2e2e2e")
logo_label.pack()

root.mainloop()
